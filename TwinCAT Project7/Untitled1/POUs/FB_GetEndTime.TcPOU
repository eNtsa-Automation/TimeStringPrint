<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_GetEndTime" Id="{f85fdf84-1d23-425d-b690-3ecd04c66f69}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_GetEndTime	
VAR_INPUT
END_VAR
VAR
	diMinutesToWait		: DINT;
	ftTargetTime		: T_FILETIME64;
	stTargetTime		: TIMESTRUCT;
	strTargetTimeString		: STRING(255);
	strPrettyEndTimeString	: STRING(255);
	
	strYear	: STRING;
	strMonth: STRING;
	strDay	: STRING;
	strHour	: STRING;
	strMinute: STRING;
	strSecond: STRING;
	strMiliSecond: STRING;
	
	
	taYear	: T_Arg;
	taMonth : T_Arg;
	taDay	: T_Arg;
	taHour	: T_Arg;
	taMinute: T_Arg;
	taSecond: T_Arg;
	taMiliSecond: T_Arg;
	
	iMonth	: INT;
	
	iFindPos	: INT;
	strResidual	: STRING(255);
	
	
	fbGetTime	: NT_GetTime;
	iGetTimeToggle	: INT;
	bTriggerGetTime	: BOOL;
	//fbFprintf	: FB_FormatString2;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[iGetTimeToggle	:= iGetTimeToggle	+ 1;
IF(iGetTimeToggle > 100) THEN
	bTriggerGetTime	:= NOT(bTriggerGetTime);
END_IF

// Run fbGetTime to keep an up to date time reference 
fbGetTime(START:=bTriggerGetTime);]]></ST>
    </Implementation>
    <Method Name="GetEndTimeString" Id="{8dc20a01-b303-41ea-a395-df6f06c000bb}">
      <Declaration><![CDATA[METHOD GetEndTimeString : STRING(255)
VAR_INPUT
		fWaitSeconds: LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[diMinutesToWait	:= LREAL_TO_DINT(fWaitSeconds / 60);
ftTargetTime := F_TranslateFileTime64Bias(in:=SYSTEMTIME_TO_FILETIME64(fbGetTime.TIMESTR),bias:=diMinutesToWait,toUTC:=TRUE);
stTargetTime := FILETIME64_TO_SYSTEMTIME(ftTargetTime);
strTargetTimeString	:= SYSTEMTIME_TO_STRING(stTargetTime);

strResidual	:= strTargetTimeString;

// Seperate the string at the year month dash
iFindPos	:= FIND(strResidual,'-');
strYear 	:= LEFT(LEFT(strResidual,iFindPos),4);
strResidual	:= RIGHT(strResidual,LEN(strResidual)-iFindPos);

// Seperate the residual string at the month day dash
iFindPos	:= FIND(strResidual,'-');
strMonth 	:= LEFT(LEFT(strResidual,iFindPos),2);
strResidual	:= RIGHT(strResidual,LEN(strResidual)-iFindPos);

iMonth	:= STRING_TO_INT(strMonth);
CASE iMonth OF 
	01:
		strMonth	:= 'January';
	02:
		strMonth	:= 'February';
	03:
		strMonth	:= 'March';
	04:
		strMonth	:= 'April';
	05:
		strMonth	:= 'May';
	06:
		strMonth	:= 'June';
	07:
		strMonth	:= 'July';
	08:
		strMonth	:= 'August';
	09:
		strMonth	:= 'September';
	10:
		strMonth	:= 'October';
	11:
		strMonth	:= 'November';
	12:
		strMonth	:= 'December';
	ELSE
		strMonth	:= INT_TO_STRING(iMonth);	
END_CASE

// Seperate the residual string at the day hour dash
iFindPos	:= FIND(strResidual,'-');
strDay 		:= LEFT(LEFT(strResidual,iFindPos),2);
strResidual	:= RIGHT(strResidual,LEN(strResidual)-iFindPos);

// Seperate the residual string at the hour minute colon
iFindPos	:= FIND(strResidual,':');
strHour 	:= LEFT(LEFT(strResidual,iFindPos),2);
strResidual	:= RIGHT(strResidual,LEN(strResidual)-iFindPos);

// Seperate the residual string at the minute second colon
iFindPos	:= FIND(strResidual,':');
strMinute 	:= LEFT(LEFT(strResidual,iFindPos),2);
strResidual	:= RIGHT(strResidual,LEN(strResidual)-iFindPos);

// Seperate the residual string at the second mili-second point
iFindPos	:= FIND(strResidual,'.');
strSecond 	:= LEFT(LEFT(strResidual,iFindPos),2);
strResidual	:= RIGHT(strResidual,LEN(strResidual)-iFindPos);

// Residual string is the Miliseconds
strMiliSecond	:= strResidual;
(*
taYear	:= F_STRING(strYear);
taMonth	:= F_STRING(strMonth);
taDay	:= F_STRING(strYear);
taHour	:= F_STRING(strHour);
taMinute:= F_STRING(strMinute);
*)
strPrettyEndTimeString := CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(CONCAT(CONCAT('the ',strDay),' of '),strMonth),' '),strYear),' at '),strHour),' : '),strMinute);


GetEndTimeString	:= strPrettyEndTimeString;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_GetEndTime">
      <LineId Id="149" Count="0" />
      <LineId Id="151" Count="2" />
      <LineId Id="155" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="91" Count="0" />
    </LineIds>
    <LineIds Name="FB_GetEndTime.GetEndTimeString">
      <LineId Id="9" Count="15" />
      <LineId Id="71" Count="0" />
      <LineId Id="73" Count="2" />
      <LineId Id="77" Count="1" />
      <LineId Id="102" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="25" Count="22" />
      <LineId Id="62" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="65" Count="2" />
      <LineId Id="49" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>